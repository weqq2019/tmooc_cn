"""
    类
        实例成员：对象的不同信息
            实例变量：对象.名称
            实例方法：def 方法名(self)
        类成员：大家共同信息
            类变量:定义在类中,方法外;  变量名 = 数据
            类方法:@classmethod
                  def 方法名(cls)
        静态方法：独立的功能
    封装：
        数据角度：多   --->    一
            例如：
                老婆：姓名、颜值、钱...
                敌人：姓名、攻击力、防御力...
                向量：x、y
            优势：
                复合人类思考方式
                将数据与对数据的操作合并在一起
        行为角度：隐藏(行为)  --> 必要(功能)
            私有成员：以双下划线命名
                障眼法:看见的是双下划线命名的变量
                      实际是单下划线 + 类名 + 私有变量名
            属性：
"""


class Wife:
    def __init__(self, name, age):
        self.name = name
        self.__age = age


w01 = Wife("双儿", 25)
# 在类外可以通过私有化的本质操作私有变量（不建议）
w01._Wife__age = 26
print(w01.__dict__)
