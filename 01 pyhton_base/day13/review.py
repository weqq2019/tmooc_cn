"""
    复习
        封装：
            封装数据：多 --> 一
            封装行为:隐藏 --> 提供必要功能
            设计角度：分而治之,变则疏之
        继承：
            继承行为：子类可以直接使用父类的方法
            继承数据：子类在构造函数中通过super()调用父类构造函数
            设计角度：抽象 --> 统一 --> 隔离
        多态：
            语法角度：调用父方法,重写,创建子类对象
            设计角度：调用父类一个方法，在不同的子类上有不同的实现.
        开闭原则：
            可以增加新功能,不修改客户端的代码.
        单一职责：
            类有且只有一个改变的原因
        依赖倒置
            调用父类，不调用子类.
        组合复用
            如果仅仅是代码的复用,优先使用组合关系,而不是继承关系

"""


class A:
    def func01(self):
        pass

class A1(A):

    def func01(self):
        print("func02")


class A2(A):
    # 重写
    def func01(self):
        print("func02")

# 动态：运行时可以改变
def func02(a):
    # 1. 调用的是父类类(A)
    a.func01()


# 3. 创建子类对象
func02(A1())
func02(A2())

